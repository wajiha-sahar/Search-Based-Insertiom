// Search Based Doubly Linked List
#include <iostream>
using namespace std;
struct Node
{
	int data;
	Node* next;
	Node* previous;
};
Node* tail = NULL;
void searchbaseins(int d)
{
	Node* n = new Node;
	Node* search = tail;
	n->data = d;
	if (tail == NULL)
	{
		n->next = n;
		n->previous = n;
		tail = n;
	}
	else
	{
		if (d <= tail->next->data)
		{
			n->next = tail->next;
			tail->next->previous = n;
			n->previous = tail;
			tail->next = n;
		}
		else if (d >= tail->data)
		{
			n->previous = tail;
			n->next = tail->next;
			tail->next->previous = n;
			tail->next = n;
			tail = n;
		}
		else
		{
			Node* search = tail->next;
			Node* search2 = tail->next->next;
			while (search != tail) {
				if (d >= search->data && d < search2->data)
				{
					n->next = search2;
					search2->previous = n;
					search->next = n;
					n->previous = search;
				}
				search = search->next;
				search2 = search2->next;
			}
		}

	}

}
void Display()
{
	Node* temp = tail;
	if (temp != NULL)
	{
		cout << "DoublyLinked List: ";
		do
		{
			temp = temp->next;
			cout << temp->data << "\t";
		} while (temp != tail);
	}
}
int main()
{
	int num, ans = 1;
	do
	{
		cout << "Enter the number you want to insert in a linked List: ";
		cin >> num;
		searchbaseins(num);
		cout << "Do you want to insert more(1 or 0): ";
		cin >> ans;
	} while (ans == 1);
	Display();
	return 0;
}
